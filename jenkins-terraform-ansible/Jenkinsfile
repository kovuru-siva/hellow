pipeline {
  agent any

  environment {
    TF_DIR = "jenkins-terraform-ansible/terraform"
    ANSIBLE_DIR = "jenkins-terraform-ansible/ansible"
  }

  stages {
    stage('Checkout') {
      steps {
        git credentialsId: '143', url: 'https://github.com/kovuru-siva/hellow.git'
      }
    }

    stage('Terraform Init') {
      steps {
        dir("${TF_DIR}") {
          sh 'terraform init'
        }
      }
    }

    stage('Terraform Apply') {
      steps {
        dir("${TF_DIR}") {
          sh 'terraform apply -auto-approve'
          sh 'terraform output -raw pub_ip > pub_ip.txt'
        }
      }
    }
    stage('Wait to comeup the instance for 3 min') {
      steps{
        sleep time: 5, unit: 'MINUTES'
      }
    }
    
    // stage('wait untill instance comeup'){
    //   steps {
    //     script {
    //       //reading the ip from the file
    //       def instance_ip = readFile('pub_ip.txt').trim()
    //       echo "Waiting for EC2 instance at ${instance_ip} to be reachable..."
    //       // Wait loop using shell (ping 3 times max)
    //       sh """
    //       for i in {1..7}; do
    //         if ping -c 1 ${instance_ip} >/dev/null 2>&1; then
    //           echo "Host ${instance_ip} is reachable"
    //           break
    //         else
    //           echo "Waiting for host ${instance_ip}..."
    //           sleep 10
    //       fi
    //       done
    //       """

    //     }

    //   }
    // }

    stage('Ansible Configure HTTPD') {
      steps {
        dir("${ANSIBLE_DIR}") {
          sh '''
            chmod 400 ~/.ssh/terraform_key
            ansible-playbook -i hosts httpd.yml --private-key=~/.ssh/terraform_key -u ec2-user
          '''
        }
      }
    }
    stage('terraform destroy') {
        steps {
            dir("${TF_DIR}") {
                sh 'terraform destroy -auto-approve'
            }
        }
    }
  }

  post {
    always {
      echo 'Pipeline Finished!'
    }
  }
}
